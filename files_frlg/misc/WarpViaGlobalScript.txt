@@ title = "Teleport anywhere (Bootstrapped)"
@@ author = "final and Mettrich"
@@ exit = "Bootstrapped"
@@ filler0 = 0xbbbbbbbb
@@ filler1 = 0xbbbbbbff
@@ filler2 = 0xbbbbffff
@@ filler3 = 0xbbffffff
@@ filler4 = 0xffffffff

// This code requires a Box 14 exit code for grab ACE.
// It can be found here:
// https://pomeg-letterbombers.github.io/pokemon-ace-notes/frlg/exit-codes/box-14-exit/

// This code will perform the teleportation upon logging off the pc.
// Visual glitches may occur when exiting too quick, but they are harmless.

// The map list can be found here:
// https://pastebin.com/peDhNbEt

map_id = 3

// `warp` determines which warp point you will teleport to.
// Set this to 0xff if you want to control the exact coordinates you
// want to warp to via the `x` and `y` variables.

warp = 0

// Leave these values at 0 if you are using any `warp` value other
// than 0xff.

x = 0
y = 0

// Do not touch the below variables

script0 = ((warp & 0xff) << 24) | ((map_id & 0xffff) << 8) | 0x39
script1 = ((y & 0xffff) << 16) | (x & 0xffff)

@@

MOV r10, #0x3000000
STRB r10, [r10, #0xea8]!  ; Store RUNNING status in sGlobalScriptContextStatus
BIC r12, sp, #0x3fc00  ; r12 = 0x3000200, prepare mode and stackDepth
ADC r11, r4, #0x300  ; Prepare script pointer
STRH r12, [r10, #0x8]  ; Store in sGlobalScriptContext->stackDepth, and sGlobalScriptContext->mode
STR r11, [r10, lr, ASR #23]!  ; Store script pointer in sGlobalScriptContext->scriptPtr
MOV r12, #{script0} ?
STR r12, [r11, #0]!  ; Store script part 1
MOV r12, #{script1} ?
STR r12, [r11, lr, ASR #25]!  ; Store script part 2 in r11+4
